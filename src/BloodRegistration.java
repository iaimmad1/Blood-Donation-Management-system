
import Project.ConnectionProvider;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import javax.swing.JOptionPane;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author PRAKASH
 */
public class BloodRegistration extends javax.swing.JFrame {

    /**
     * Creates new form BloodDonation
     */
    public BloodRegistration() {
        initComponents();
       Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
// Gets the width and height
double width = screenSize.getWidth();
double height = screenSize.getHeight();
// Subtract height of taskbar from height in my case 50 
setSize((int)width, (int)height -50);
setLocation(0,57);  // Set frame at center of the screen
//setUndecorated(true); // Removes title bar
setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

setVisible(true);
  
        date();
     
    }

    /**
     *
     * @return
     */
   private void date() 
    {
       // JOptionPane.showMessageDialog(null, "date method");
        DateFormat df=new SimpleDateFormat("yyyy-MM-dd");
        Date d=new Date();
        df.format(d);
        lblDate.setText(df.format(d));
        try{
         Connection con =ConnectionProvider.getCon();
         Statement st=con.createStatement();     
         ResultSet rs2 = st.executeQuery("Select max(donation_log_id) from donation_log");
          if(rs2.next())// our table is not then 
          {
              int Id = rs2.getInt(1);
              Id += 1;
              String str=String.valueOf(Id);
              lbl_recordId.setText(str);
              
          }
          else{
              lbl_recordId.setText("1");
          }
        }catch(SQLException e){
         JOptionPane.showMessageDialog(null, e);
        }
    
      //  return d;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        donorId_TextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        unitComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        lbl_dateAndTime = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        btn_save = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lbl_recordId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Donor ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, -1, -1));

        donorId_TextField.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        donorId_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donorId_TextFieldActionPerformed(evt);
            }
        });
        getContentPane().add(donorId_TextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, 170, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Donated Unit");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(312, 160, 90, -1));

        unitComboBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        unitComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", " " }));
        unitComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(unitComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Date");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 50, 20));
        getContentPane().add(lbl_dateAndTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 103, 170, -1));

        lblDate.setBackground(new java.awt.Color(255, 255, 255));
        lblDate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDate.setText("yyyy/mm/dd hh/mm/ss");
        getContentPane().add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 70, 200, -1));

        btn_save.setText("save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        getContentPane().add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, -1, -1));

        btn_cancel.setText("cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });
        getContentPane().add(btn_cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 250, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Record ID");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, 70, 20));

        lbl_recordId.setBackground(new java.awt.Color(255, 255, 255));
        lbl_recordId.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbl_recordId.setText("lblRecordId");
        getContentPane().add(lbl_recordId, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, 200, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void unitComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitComboBoxActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        // TODO add your handling code here:
        dispose();
     
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        // TODO add your handling code here:
        try{
            int l_id =Integer.parseInt(lbl_recordId.getText());
            String dod = lblDate.getText();
            int du = Integer.parseInt((String) unitComboBox.getSelectedItem());
            int d_id = Integer.parseInt(donorId_TextField.getText());
            
            int donatedUnit;
            
            Connection con =ConnectionProvider.getCon();
            Statement st=con.createStatement();
            ResultSet rs1 = st.executeQuery("select donatedUnit from donor where donorId = '"+d_id+"'");
            if(rs1.next())
            {
                 donatedUnit = rs1.getInt(1);
                if(donatedUnit == 0)
                {
                   st.executeUpdate("insert into donation_log(donation_log_id,date_of_donation,units_donated,donor_ID) values('"+l_id+"','"+dod+"','"+du+"','"+d_id+"') ");
                   st.executeUpdate("update  donor set donatedUnit = '"+du+"' where donorId = '"+d_id+"'");
                   JOptionPane.showMessageDialog(null, "updated successfully");
                   
                    
                }
                else{
                
                ResultSet rs2 = st.executeQuery("select max(date_of_donation) from donation_log where donor_ID = '"+d_id+"' ");
                if(rs2.next())
                {
                    String p_date = rs2.getString(1);
                   
                
                 Date from = new SimpleDateFormat("yyyy-MM-dd").parse(dod);
                 Date to = new SimpleDateFormat("yyyy-MM-dd").parse(p_date);
               
                 long difference_In_Time = from.getTime() - to.getTime();
                 long dif = (difference_In_Time / (1000 * 60 * 60 * 24)) % 365;
             //     JOptionPane.showMessageDialog(null, "dif date"+dif);   // in months
                    if(dif >= 90)
                    {
                       int totalDonation =  donatedUnit + du;
                    st.executeUpdate("insert into donation_log(donation_log_id,date_of_donation,units_donated,donor_ID) values('"+l_id+"','"+dod+"','"+du+"','"+d_id+"') ");
                    st.executeUpdate("update  donor set donatedUnit = '"+totalDonation+"' where donorId = '"+d_id+"'");
                    JOptionPane.showMessageDialog(null, "updated successfully");
                    
                    }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "donation can't be taken now from this donor");
                        }
                    
                    
                }
            
            }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "donor is not registered");
            }
           dispose();
            new BloodRegistration().setVisible(true);
            con.close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }catch (ParseException ex) {
                        Logger.getLogger(BloodRegistration.class.getName()).log(Level.SEVERE, null, ex);
                    }
        

    }//GEN-LAST:event_btn_saveActionPerformed

       
       
    private void donorId_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donorId_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_donorId_TextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BloodRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BloodRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BloodRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BloodRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BloodRegistration().setVisible(true);
            }
        });
    }
    

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_save;
    private javax.swing.JTextField donorId_TextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lbl_dateAndTime;
    private javax.swing.JLabel lbl_recordId;
    private javax.swing.JComboBox<String> unitComboBox;
    // End of variables declaration//GEN-END:variables

    
}
